// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IToken is an autogenerated mock type for the IToken type
type IToken struct {
	mock.Mock
}

type IToken_Expecter struct {
	mock *mock.Mock
}

func (_m *IToken) EXPECT() *IToken_Expecter {
	return &IToken_Expecter{mock: &_m.Mock}
}

// GenerateJwt provides a mock function with given fields: username, roleid
func (_m *IToken) GenerateJwt(username string, roleid uint) (string, error) {
	ret := _m.Called(username, roleid)

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string, uint) (string, error)); ok {
		return rf(username, roleid)
	}
	if rf, ok := ret.Get(0).(func(string, uint) string); ok {
		r0 = rf(username, roleid)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string, uint) error); ok {
		r1 = rf(username, roleid)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// IToken_GenerateJwt_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateJwt'
type IToken_GenerateJwt_Call struct {
	*mock.Call
}

// GenerateJwt is a helper method to define mock.On call
//   - username string
//   - roleid uint
func (_e *IToken_Expecter) GenerateJwt(username interface{}, roleid interface{}) *IToken_GenerateJwt_Call {
	return &IToken_GenerateJwt_Call{Call: _e.mock.On("GenerateJwt", username, roleid)}
}

func (_c *IToken_GenerateJwt_Call) Run(run func(username string, roleid uint)) *IToken_GenerateJwt_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string), args[1].(uint))
	})
	return _c
}

func (_c *IToken_GenerateJwt_Call) Return(_a0 string, _a1 error) *IToken_GenerateJwt_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *IToken_GenerateJwt_Call) RunAndReturn(run func(string, uint) (string, error)) *IToken_GenerateJwt_Call {
	_c.Call.Return(run)
	return _c
}

type mockConstructorTestingTNewIToken interface {
	mock.TestingT
	Cleanup(func())
}

// NewIToken creates a new instance of IToken. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIToken(t mockConstructorTestingTNewIToken) *IToken {
	mock := &IToken{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
